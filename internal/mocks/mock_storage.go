// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\admin\GolandProjects\URLShortener\internal\storage\storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/Totarae/URLShortener/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AppendToFile mocks base method.
func (m *MockStorage) AppendToFile(entry model.Entry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AppendToFile", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// AppendToFile indicates an expected call of AppendToFile.
func (mr *MockStorageMockRecorder) AppendToFile(entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendToFile", reflect.TypeOf((*MockStorage)(nil).AppendToFile), entry)
}

// Get mocks base method.
func (m *MockStorage) Get(short string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", short)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockStorageMockRecorder) Get(short interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStorage)(nil).Get), short)
}

// Save mocks base method.
func (m *MockStorage) Save(short, original string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", short, original)
}

// Save indicates an expected call of Save.
func (mr *MockStorageMockRecorder) Save(short, original interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockStorage)(nil).Save), short, original)
}
